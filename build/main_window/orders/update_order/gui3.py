
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Frame, StringVar, Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox
import controller as db_controller

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)



def updateOrder():
    UpdateOrder()


class UpdateOrder(Frame):
    def __init__(self, parent, controller=None, *args, **kwargs):
        Frame.__init__(self, parent, *args, **kwargs)  
        self.parent = parent
        self.selected_r_id = self.parent.selected_rid


        self.data = {
            "id": StringVar(),
            "order": StringVar(),
        }

        self.canvas = Canvas(
            self,
            bg = "#FFFFFF",
            height = 589,
            width = 1100,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        self.canvas.place(x = 0, y = 0)
        self.canvas.create_rectangle(
            0.0,
            0.0,
            1100.0,
            589.0,
            fill="#D9D9D9",
            outline="")

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = self.canvas.create_image(
            919.0,
            231.00000017361162,
            image=self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = self.canvas.create_image(
            180.99999380111694,
            447.0,
            image=self.image_image_2
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = self.canvas.create_image(
            35.0,
            525.0,
            image=self.image_image_3
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        image_4 = self.canvas.create_image(
            154.0,
            544.0,
            image=self.image_image_4
        )

        self.image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        image_5 = self.canvas.create_image(
            222.0,
            496.0,
            image=self.image_image_5
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        button_1 = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=self.handle_update,
            relief="flat"
        )
        button_1.place(
            x=450.0,
            y=505.0,
            width=178.0,
            height=48.0
        )

        self.image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        image_6 = self.canvas.create_image(
            534.0,
            54.0,
            image=self.image_image_6
        )

        self.id_text =self.canvas.create_text(
            111.0,
            470.0,
            anchor="nw",
            text="01",
            fill="#FFFFFF",
            font=("Montserrat SemiBold", 17 * -1)
        )


  


        self.image_image_7 = PhotoImage(file=relative_to_assets("image_7 copy.png"))
        image_7 = self.canvas.create_image(
                554.0,                 
                267.0,                
                image=self.image_image_7
            )

        entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1 copy.png"))
        entry_bg_1 = self.canvas.create_image(
            554.5,
            274.5,
            image=entry_image_1
        )
        self.entry_1 = Text(
            self,
            bd=0,
            bg="#E6E6E6",
            fg="#000716",
            highlightthickness=0
        )
        self.entry_1.place(
            x=409.0,
            y=139.0,
            width=291.0,
            height=269.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        button_2 = Button(
            self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.parent.navigate("view"),
            relief="flat"
        )
        button_2.place(
            x=128.0,
            y=38.0,
            width=52.7611083984375,
            height=48.81919860839844
        )

    def initialize(self):
        self.order_data = db_controller.get_orders()
        self.selected_r_id = self.parent.selected_rid

        # Filter out all reservations for selected id reservation
        if self.order_data is not None:
            self.selected_order_data = list(
                filter(lambda x: str(x[0]) == self.selected_r_id, self.order_data)
            )

            if self.selected_order_data:
                self.selected_order_data = self.selected_order_data[0]
                self.canvas.itemconfigure(self.id_text, text=self.selected_order_data[0])
                self.data["order"] = self.selected_order_data[2]
                self.entry_1.delete('1.0', 'end')
                self.entry_1.insert('1.0', self.data["order"])

    def handle_update(self):
        result = db_controller.update_order(
            self.selected_r_id,
            order=self.entry_1.get("1.0", "end-1c")

        )

        print("?? ", result)
        # Check if the update was successful
        if result:
            messagebox.showinfo("Success", "Details updated successfully")
            # Navigate back to the view window
            self.parent.navigate("view")
            # Refresh the view window to update the Treeview
            self.parent.windows.get("view").handle_refresh()
            # Clear all fields in the update frame
            self.entry_1.delete('1.0', 'end')
        else:
            error_message = "Failed to update details. Please check your input and try again."
            messagebox.showerror("Error", error_message)
     
